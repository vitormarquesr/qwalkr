% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linalg.R
\name{evalMFUN.spectral}
\alias{evalMFUN.spectral}
\title{Apply a Function to a Hermitian Matrix}
\usage{
\method{evalMFUN}{spectral}(object, FUN, ...)
}
\arguments{
\item{object}{an object of class \code{"spectral"} containing the
spectral decomposition of a matrix.}

\item{FUN}{the function to be applied to the matrix.}

\item{...}{further arguments passed on to \code{FUN}.}
}
\value{
The matrix resulting from the application of \code{FUN}.

A Hermitian Matrix admits the spectral decomposition
\deqn{H = \sum_k \lambda_k E_k}
where \eqn{\lambda_k} are its eigenvalues and \eqn{E_k} the
orthogonal projectors onto the \eqn{\lambda_k}-eigenspace.

If \eqn{f}=\code{FUN} is defined on the eigenvalues of \code{H} then
\code{evalMFUN} performs the following calculation

\deqn{f(H) = \sum_k f(\lambda_k) E_k}
}
\description{
Apply a function to a hermitian matrix given its
spectral decomposition.
}
\examples{
H <- matrix(c(0,1,1,1,0,1,1,1,0), nrow=3)
decomp <- spectral(H)

# Calculate H^2.
evalMFUN(decomp, FUN = function(x) x^2)

# Calculate sin(H).
evalMFUN(decomp, FUN = function(x) sin(x))

# Calculate H^3.
evalMFUN(decomp, FUN = function(x, y) x^y, 3)

}
\seealso{
\link{spectral}, \link{evalMFUN}
}
