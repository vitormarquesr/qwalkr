% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/linalg.R
\name{spectral}
\alias{spectral}
\title{Spectral Decomposition of a Matrix}
\usage{
spectral(A, multiplicity = TRUE, tol = .Machine$double.eps^0.5, ...)
}
\arguments{
\item{A}{a square matrix.}

\item{multiplicity}{if \code{TRUE} (default), tries to infer eigenvalue multiplicity. If set to
\code{FALSE}, each eigenvalue is considered unique with multiplicity one.}

\item{tol}{two eigenvalues \code{x}, \code{y} are considered equal if \code{abs(x-y) < tol}. Defaults to
\code{tol=.Machine$double.eps^0.5}.}

\item{...}{further arguments passed on to \code{\link[base:eigen]{base::eigen()}}}
}
\value{
The spectral decomposition of \code{A} is returned as a list with components
\item{eigvals}{vector containing the unique eigenvalues of \code{A} in \emph{decreasing} order.}
\item{multiplicity}{multiplicities of the eigenvalues in \code{eigvals}.}
\item{eigvectors}{a \verb{nrow(A) x nrow(A)} matrix whose columns are eigenvectors ordered
according to \code{eigvals}. Note that there may be more eigenvectors than eigenvalues if
\code{multiplicity=TRUE}, however eigenvectors of the same eigenspace are next to each other.}
}
\description{
\code{spectral()} is a wrapper around \code{\link[base:eigen]{base::eigen()}} that can handle repeated eigenvalues.
}
\examples{
spectral(matrix(c(0,1,0,1,0,1,0,1,0), nrow=3))

# Use "tol" to set the tolerance for numerical equality
spectral(matrix(c(0,1,0,1,0,1,0,1,0), nrow=3), tol=10e-5)

# Use "multiplicity=FALSE" to force each eigenvalue to be considered unique
spectral(matrix(c(0,1,0,1,0,1,0,1,0), nrow=3), multiplicity = FALSE)

# Use ... to pass additional arguments to eigen()
spectral(matrix(c(0,1,0,1,0,1,0,1,0), nrow=3), symmetric=TRUE)

}
\seealso{
\code{\link[base:eigen]{base::eigen()}}
}
